product-name: p-redis
product-properties:
  .cf-redis-broker.lua_scripting_enabled:
    value: false
  .cf-redis-broker.redis_maxmemory:
    value: 512MB
  .cf-redis-broker.service_instance_limit:
    value: 5
  .properties.backups_selector:
    selected_option: azure
    value: Azure Backups
  .properties.backups_selector.azure.account:
    value: {{.redis_backup_account}}
  .properties.backups_selector.azure.bg_save_timeout:
    value: 10
  .properties.backups_selector.azure.container:
    value: {{.redis_backup_container}}
  .properties.backups_selector.azure.cron_schedule:
    value: 0 0 * * *
  .properties.backups_selector.azure.path:
    value: {{.redis_backup_path}}
  .properties.backups_selector.azure.storage_access_key:
    value: {{.storage_access_key}}
  .properties.canary_org_space_selector:
    selected_option: inactive
    value: "No"
  .properties.large_plan_selector:
    selected_option: active
    value: Plan Active
  .properties.large_plan_selector.active.az_multi_select:
    value:
    - Availability Sets
  .properties.large_plan_selector.active.cf_service_access:
    value: enable
  .properties.large_plan_selector.active.description:
    value: This plan provides a large on-demand Redis instance, tailored for caching
      use-cases with persistence to disk enabled
  .properties.large_plan_selector.active.instance_limit:
    value: 20
  .properties.large_plan_selector.active.lua_scripting:
    value: false
  .properties.large_plan_selector.active.maxclients:
    value: 10000
  .properties.large_plan_selector.active.name:
    value: cache-large
  .properties.large_plan_selector.active.tcp_keepalive:
    value: 60
  .properties.large_plan_selector.active.timeout:
    value: 3600
  .properties.medium_plan_selector:
    selected_option: active
    value: Plan Active
  .properties.medium_plan_selector.active.az_multi_select:
    value:
    - Availability Sets
  .properties.medium_plan_selector.active.cf_service_access:
    value: enable
  .properties.medium_plan_selector.active.description:
    value: This plan provides a medium on-demand Redis instance, tailored for caching
      use-cases with persistence to disk enabled
  .properties.medium_plan_selector.active.instance_limit:
    value: 20
  .properties.medium_plan_selector.active.lua_scripting:
    value: false
  .properties.medium_plan_selector.active.maxclients:
    value: 5000
  .properties.medium_plan_selector.active.name:
    value: cache-medium
  .properties.medium_plan_selector.active.tcp_keepalive:
    value: 60
  .properties.medium_plan_selector.active.timeout:
    value: 3600
  .properties.metrics_polling_interval:
    value: 30
  .properties.small_plan_selector:
    selected_option: active
    value: Plan Active
  .properties.small_plan_selector.active.az_multi_select:
    value:
    - Availability Sets
  .properties.small_plan_selector.active.cf_service_access:
    value: enable
  .properties.small_plan_selector.active.description:
    value: This plan provides a small on-demand Redis instance, tailored for caching
      use-cases with persistence to disk enabled
  .properties.small_plan_selector.active.instance_limit:
    value: 20
  .properties.small_plan_selector.active.lua_scripting:
    value: false
  .properties.small_plan_selector.active.maxclients:
    value: 1000
  .properties.small_plan_selector.active.name:
    value: cache-small
  .properties.small_plan_selector.active.tcp_keepalive:
    value: 60
  .properties.small_plan_selector.active.timeout:
    value: 3600
  .properties.syslog_selector:
    selected_option: inactive
    value: "No"
  .properties.tls_enable_selector:
    selected_option: active
    value: Optional - Developers may configure their apps to use TLS.
  .redis-on-demand-broker.enable_create_swap_delete:
    value: false
  .redis-on-demand-broker.maximum_parallel_upgrades:
    value: 1
  .redis-on-demand-broker.service_instance_limit:
    value: 20
  .redis-on-demand-broker.service_instance_sharing:
    value: false
  .redis-on-demand-broker.upgrade_canary_number:
    value: 1
network-properties:
  network:
    name: {{.redis_subnet_name}}
  other_availability_zones:
  - name: Availability Sets
  service_network:
    name: {{.services_subnet_name}}
  singleton_availability_zone:
    name: Availability Sets
resource-config:
  cf-redis-broker:
    instances: automatic
    persistent_disk:
      size_mb: automatic
    instance_type:
      id: automatic
    internet_connected: false
    max_in_flight: 100%
  redis-on-demand-broker:
    instances: automatic
    instance_type:
      id: automatic
    internet_connected: false
    max_in_flight: 100%
errand-config:
  broker-deregistrar:
    pre-delete-state: true
  broker-registrar:
    post-deploy-state: true
  delete-all-service-instances-and-deregister-broker:
    pre-delete-state: true
  on-demand-broker-smoke-tests:
    post-deploy-state: true
  orphan-deployments:
    post-deploy-state: false
  recreate-all-service-instances:
    post-deploy-state: false
  register-broker:
    post-deploy-state: true
  smoke-tests:
    post-deploy-state: true
  upgrade-all-service-instances:
    post-deploy-state: true
